# Generated by Django 5.2.5 on 2025-08-30 12:12

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("inventory", "0001_initial"),
        ("users", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Panier",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("DRAFT", "Draft"), ("SUBMITTED", "Submitted")],
                        default="DRAFT",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "submitted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Submitted at"
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Additional notes for this cart",
                        verbose_name="Notes",
                    ),
                ),
                (
                    "technician",
                    models.ForeignKey(
                        limit_choices_to={"role": "TECH"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="paniers",
                        to="users.profile",
                        verbose_name="Technician",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cart",
                "verbose_name_plural": "Carts",
                "db_table": "orders_panier",
            },
        ),
        migrations.CreateModel(
            name="Demande",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("SUBMITTED", "Submitted"),
                            ("APPROVED", "Approved"),
                            ("PARTIAL", "Partially Approved"),
                            ("REFUSED", "Refused"),
                            ("PREPARED", "Prepared"),
                            ("HANDED_OVER", "Handed Over"),
                            ("CLOSED", "Closed"),
                        ],
                        default="SUBMITTED",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "approved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Approved at"
                    ),
                ),
                (
                    "prepared_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Prepared at"
                    ),
                ),
                (
                    "handover_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("SIGNATURE", "Digital Signature"),
                            ("PIN", "PIN Code"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="Handover method",
                    ),
                ),
                (
                    "handover_data",
                    models.JSONField(
                        blank=True,
                        help_text="Signature or PIN confirmation data",
                        null=True,
                        verbose_name="Handover data",
                    ),
                ),
                (
                    "handed_over_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Handed over at"
                    ),
                ),
                (
                    "closed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Closed at"
                    ),
                ),
                (
                    "refusal_reason",
                    models.TextField(blank=True, verbose_name="Refusal reason"),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("LOW", "Low"),
                            ("NORMAL", "Normal"),
                            ("HIGH", "High"),
                            ("URGENT", "Urgent"),
                        ],
                        default="NORMAL",
                        max_length=20,
                        verbose_name="Priority",
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="approved_demandes",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Approved by",
                    ),
                ),
                (
                    "prepared_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="prepared_demandes",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Prepared by",
                    ),
                ),
                (
                    "technician",
                    models.ForeignKey(
                        limit_choices_to={"role": "TECH"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="demandes",
                        to="users.profile",
                        verbose_name="Technician",
                    ),
                ),
                (
                    "panier",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="demande",
                        to="orders.panier",
                        verbose_name="Original cart",
                    ),
                ),
            ],
            options={
                "verbose_name": "Demand",
                "verbose_name_plural": "Demands",
                "db_table": "orders_demande",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PanierLine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Quantity",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
                (
                    "article",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="panier_lines",
                        to="inventory.article",
                        verbose_name="Article",
                    ),
                ),
                (
                    "panier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lines",
                        to="orders.panier",
                        verbose_name="Cart",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cart Line",
                "verbose_name_plural": "Cart Lines",
                "db_table": "orders_panier_line",
            },
        ),
        migrations.CreateModel(
            name="DemandeLine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "qty_requested",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Requested quantity",
                    ),
                ),
                (
                    "qty_approved",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Approved quantity",
                    ),
                ),
                (
                    "qty_prepared",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Prepared quantity",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
                (
                    "article",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="demande_lines",
                        to="inventory.article",
                        verbose_name="Article",
                    ),
                ),
                (
                    "demande",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lines",
                        to="orders.demande",
                        verbose_name="Demand",
                    ),
                ),
            ],
            options={
                "verbose_name": "Demand Line",
                "verbose_name_plural": "Demand Lines",
                "db_table": "orders_demande_line",
                "indexes": [
                    models.Index(
                        fields=["demande"], name="orders_dema_demande_dbe851_idx"
                    ),
                    models.Index(
                        fields=["article"], name="orders_dema_article_aba2b4_idx"
                    ),
                ],
                "unique_together": {("demande", "article")},
            },
        ),
        migrations.AddIndex(
            model_name="panier",
            index=models.Index(
                fields=["technician", "status"], name="orders_pani_technic_e82455_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="panier",
            index=models.Index(fields=["status"], name="orders_pani_status_7e02d7_idx"),
        ),
        migrations.AddConstraint(
            model_name="panier",
            constraint=models.UniqueConstraint(
                condition=models.Q(("status", "DRAFT")),
                fields=("technician",),
                name="unique_draft_cart_per_technician",
            ),
        ),
        migrations.AddIndex(
            model_name="demande",
            index=models.Index(
                fields=["technician", "status"], name="orders_dema_technic_ce08d7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="demande",
            index=models.Index(fields=["status"], name="orders_dema_status_eaeaae_idx"),
        ),
        migrations.AddIndex(
            model_name="demande",
            index=models.Index(
                fields=["created_at"], name="orders_dema_created_eebb84_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="demande",
            index=models.Index(
                fields=["priority"], name="orders_dema_priorit_71aa52_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="panierline",
            index=models.Index(
                fields=["panier"], name="orders_pani_panier__62a4dd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="panierline",
            index=models.Index(
                fields=["article"], name="orders_pani_article_31d507_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="panierline",
            unique_together={("panier", "article")},
        ),
    ]
